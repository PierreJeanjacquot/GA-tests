name: Sconify iApp

on:
  workflow_dispatch:
    inputs:
      image-name:
        required: true
        type: string
      image-tag:
        required: true
        type: string
      sconify-debug:
        type: boolean
        default: true
      sconify-prod:
        type: boolean
        default: true

jobs:
  sconify:
    uses: iExecBlockchainComputing/github-actions-workflows/.github/workflows/sconify.yml@feat/sconify
    with:
      # runner: your-runner-here ⚠️ control the runner used in the workflow to match your requirements
      image-name: ${{ inputs.image-name }}
      image-tag: ${{ inputs.image-tag }}
      sconify-debug: ${{ inputs.sconify-debug }}
      sconify-prod: ${{ inputs.sconify-prod }}
      docker-registry: docker.io
      sconify-version: 5.9.0-v15
      binary: /usr/local/bin/node
      command: node /app/src/app.js
      host-path: |
        /etc/hosts
        /etc/resolv.conf
      binary-fs: true
      fs-dir: /app
      heap: 1G
      dlopen: 1
      mprotect: 1
      docker-username: ${{ vars.DOCKER_USERNAME }}
      scontain-username: ${{ vars.SCONTAIN_USERNAME }}
    secrets:
      docker-password: ${{ secrets.DOCKER_TOKEN }}
      scontain-password: ${{ secrets.SCONTAIN_TOKEN }}
      scone-signing-key: ${{ secrets.SCONE_SIGNING_KEY }}

  use-sconify-output:
    # usually you want to deploy the sconified image as an iExec app using the sconify job outputs
    runs-on: ubuntu-latest
    needs: sconify
    steps:
      - run: |
          echo "DEBUG IMAGE INFO: image=${{ needs.sconify.outputs.debug-image }} | checksum=${{ needs.sconify.outputs.debug-checksum }} | mrenclave=${{ needs.sconify.outputs.debug-mrenclave }}"
          echo "PROD IMAGE INFO: image=${{ needs.sconify.outputs.prod-image }} | checksum=${{ needs.sconify.outputs.prod-checksum }} | mrenclave=${{ needs.sconify.outputs.prod-mrenclave }}"
